grammar akn
  # TODO: either one big grammar, or we need to fake inheritance

  root              <- 'noop'

  # ------------------------------------------------------------------------------
  # Judgment
  # ------------------------------------------------------------------------------ 

  judgment          <- indent
                         judgment_body
                         conclusions:conclusions?
                         attachments:attachments?
                       dedent
                       <Judgment>

  judgment_body     <- introduction:introduction?
                       background:background?
                       arguments:arguments?
                       remedies:remedies?
                       motivation:motivation?
                       decision:decision?
                       <JudgmentBody>

  # ------------------------------------------------------------------------------ 
  # Hierarchical Structure (acts, bills)
  # ------------------------------------------------------------------------------
  # TODO: coverpage

  act               <- hierarchical_structure <Act>

  bill              <- hierarchical_structure <Bill>

  hierarchical_structure <- indent
                              preface:preface?
                              preamble:preamble?
                              body
                              conclusions:conclusions?
                              attachments:attachments?
                            dedent
                            <HierarchicalStructure>

  # ------------------------------------------------------------------------------
  # Open structure (doc, statement, debateReport, etc.)
  # ------------------------------------------------------------------------------

  debate_report     <- open_structure <DebateReport>

  doc               <- open_structure <Doc>

  statement         <- open_structure <Statement>

  # TODO: components
  open_structure    <- indent
                         preface:preface?
                         preamble:preamble?
                         main_body
                         conclusions:conclusions?
                         attachments:attachments?
                       dedent
                       <OpenStructure>

  # ------------------------------------------------------------------------------
  # Hierarchical elements
  # ------------------------------------------------------------------------------

  hier_element      <- crossheading / hier_element_block

  hier_element_block <- hier_element_name heading:hier_element_heading? eol
                        indent
                          subheading:subheading?
                          content:hier_block_element*
                        dedent <HierElement>

                        # num - heading
                        # - heading
                        # num
                        # TODO: maybe better to make the heading the default?
                        #   eg: heading
                        #       num -
                        #       num - heading
  hier_element_heading <- space num:[^\n-]* heading:('-' space content:inline*)? <HierElementHeading>

  hier_block_element <- hier_element / block_element

                     # this is for top-level containers that may/may not start with an
                     # indented block, but otherwise contain hier content
  hier_indent       <- (indent content:hier_element+ dedent) / hier_element

                     # this is for top-level containers that may/may not start with an
                     # indented block, but otherwise contain block and hier content
  hier_block_indent <- (indent content:hier_block_element+ dedent) / hier_block_element

  hier_element_name <- ('ALINEA' / 'ARTICLE' / 'BOOK' / 'CHAPTER' / 'CLAUSE' / 'DIVISION' / 'INDENT' / 'LEVEL' / 'LIST'
                        / 'PARAGRAPH' / 'PART' / 'POINT' / 'PROVISO' / 'RULE' / 'SECTION' / 'SUBCHAPTER' / 'SUBCLAUSE'
                        / 'SUBDIVISION' / 'SUBLIST' / 'SUBPARAGRAPH' / 'SUBPART' / 'SUBRULE' / 'SUBSECTION' / 'SUBTITLE'
                        / 'TITLE' / 'TOME' / 'TRANSITIONAL')

  # ------------------------------------------------------------------------------
  # Containers
  # ------------------------------------------------------------------------------

  preface           <- preface_marker
                       content:(!preamble_marker !body_marker block_element)*
                       <Preface>

  preamble          <- preamble_marker
                       content:(!body_marker block_element)*
                       <Preamble>

                     # body that MUST have a hier element
  body              <- body_marker?
                       content:(!conclusions_marker !attachment_marker hier_block_indent)*
                       <Body>

                     # body with mixed block and hier elements
  main_body         <- body_marker?
                       content:(!conclusions_marker !attachment_marker hier_block_indent)*
                       <MainBody>

  conclusions       <- conclusions_marker
                       content:(!attachment_marker block_element)*
                       <Conclusions>

  # Judment-specific containers

  introduction      <- introduction_marker
                       content:(!background_marker !arguments_marker !remedies_marker !motivation_marker !decision_marker !conclusions_marker !attachment_marker hier_block_indent)*
                       <Introduction>

  background        <- background_marker
                       content:(!arguments_marker !remedies_marker !motivation_marker !decision_marker !conclusions_marker !attachment_marker hier_block_indent)*
                       <Background>

  arguments         <- arguments_marker
                       content:(!remedies_marker !motivation_marker !decision_marker !conclusions_marker !attachment_marker hier_block_indent)*
                       <Arguments>

  remedies          <- remedies_marker
                       content:(!motivation_marker !decision_marker !conclusions_marker !attachment_marker hier_block_indent)*
                       <Remedies>

  motivation        <- motivation_marker
                       content:(!decision_marker !conclusions_marker !attachment_marker hier_block_indent)*
                       <Motivation>

  decision          <- decision_marker
                       content:(!conclusions_marker !attachment_marker hier_block_indent)*
                       <Decision>

  attachments       <- attachment+ <Attachments>

                       # an attachment's body may be indented with a subheading, or go
                       # directly into content, or a mixture
  attachment        <- attachment_marker heading:attachment_heading? eol
                       indented:(
                         indent
                           subheading:subheading?
                           content:hier_block_element*
                         dedent
                       )?
                       content:(!attachment_marker hier_block_indent)*
                       <Attachment>

  attachment_heading <- space content:inline* <AttachmentHeading>

  # General container markers

  body_marker       <- 'BODY' eol

  conclusions_marker <- 'CONCLUSIONS' eol

  preamble_marker   <- 'PREAMBLE' eol

  preface_marker    <- 'PREFACE' eol

  # Judgment markers

  introduction_marker <- 'INTRODUCTION' eol

  background_marker <- 'BACKGROUND' eol

  arguments_marker  <- 'ARGUMENTS' eol

  remedies_marker   <- 'REMEDIES' eol

  motivation_marker <- 'MOTIVATION' eol

  decision_marker   <- 'DECISION' eol

  # attachment markers

  attachment_marker <- 'ATTACHMENT' / 'APPENDIX' / 'SCHEDULE' / 'ANNEXURE'

  # ------------------------------------------------------------------------------ 
  # Blocks
  # ------------------------------------------------------------------------------

                     # optionally nested block element
  block_element     <- nested_block_element / block_elements

  nested_block_element <- indent content:block_element+ dedent <NestedBlockElement>

  block_elements    <- block_list / table / longtitle / embedded_structure / line

  block_list        <- block_item+ <BlockList>

                     # (a)
                     #
                     # (a) preamble
                     #
                     # (a)
                     #   (i) child
                     #
  block_item        <- num:('(' [^)]+ ')') preamble:(eol / (space !block_item block_elements)?)
                       children:(indent
                         content:block_element+
                       dedent)?
                       <BlockItem>

                     # TODO
  table             <- 'TABLE' eol <Table>

  longtitle         <- 'LONGTITLE' space content:inline+ eol <Longtitle>

  subheading        <- 'SUBHEADING' space content:inline+ eol <Heading>

  crossheading      <- 'CROSSHEADING' space content:inline+ eol <Crossheading>

                     # The line block is the only thing that can contain arbitrary text
                     # at the start of a line, where a dedent may occur. By guarding
                     # against it, we don't have to guard at every place that
                     # could start a line.
  line              <- !dedent content:inline+ eol <Line>

  # ------------------------------------------------------------------------------
  # Subflows (that go from inlines into nested complex structures)
  # ------------------------------------------------------------------------------

  embedded_structure <- 'QUOTE' eol
                        indent
                          content:hier_block_element*
                        dedent
                        <EmbeddedStructure>

  # ------------------------------------------------------------------------------ 
  # Inlines and markers
  # ------------------------------------------------------------------------------ 
  
  inline            <- inline_marker / [^\n]

  inline_marker     <- bold / image / italics / remark / ref

                     # images like markdown
                     # eg. ![title text](image url)
                     #
                     # the title text is optional, but the enclosing square brackets aren't
  image             <- '![' content:(!'](' [^\n])* '](' href:([^)\n]+) ')' <Image>

                     # **foo**
  bold              <- '**' content:(!'**' inline)+ '**' <Bold>

                     # //foo//
  italics           <- '//' content:(!'//' inline)+ '//' <Italics>

                     # [[remark]]
  remark            <- '[[' content:(!']]' inline)+ ']]' <Remark>

                     # [text](href)
  ref               <- '[' content:(!'](' [^\n])* '](' href:[^)\n]* ')' <Ref>

  # ------------------------------------------------------------------------------
  # Terminals
  # ------------------------------------------------------------------------------ 

  eol               <- newline empty_line*

  empty_line        <- space? newline

  space             <- ' '+

  newline           <- "\n"

  indent            <- '{' eol

  dedent            <- '}' eol
